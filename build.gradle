buildscript {
	repositories {
		mavenCentral()
		//Needed only for SNAPSHOT versions
		//maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.10'
		classpath "net.ltgt.gradle:gradle-errorprone-plugin:0.0.11"
	}
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'net.ltgt.errorprone'



apply plugin: "info.solidsoft.pitest"

sourceCompatibility = 1.8

group = 'se.fearless'
archivesBaseName = "fettle"
version = '1.0.0-SNAPSHOT'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

defaultTasks 'build'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit-dep', version: '4.11'
    testCompile group: 'se.mockachino', name: 'mockachino', version: '0.6.1'
    compile group: 'com.google.guava', name: 'guava', version: '18.0'
}

task gwtJar(type: Jar, dependsOn: classes) {
    classifier = 'gwt'
    from sourceSets.main.getOutput().classesDir
    exclude("**/export/DotExporter*", "**/util/PredicateCondition*")
    into('se/fearless/fettle/super') {
        from sourceSets.main.allJava

    }
    into('se/fearless/fettle') {
        from sourceSets.main.resources
        exclude("**/export*")
    }
}

jar {
    exclude("**/*.xml")
}

checkstyleMain {
    doLast {
        ant.xslt(in: "$buildDir/reports/checkstyle/main.xml",
                style:"config/checkstyle/checkstyle.xsl",
                out:"$buildDir/reports/checkstyle/checkstyle.html"
        )
    }
}

checkstyleTest {
    ignoreFailures = true
}

jacocoTestReport {
    reports {
        html.enabled = true
        csv.enabled = false
        xml.enabled = false
    }
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
}

// custom tasks for creating source jar
task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
// custom tasks for creating javadoc jar
task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
	 archives gwtJar
    archives sourcesJar
    archives javadocJar
}

signing {
	required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
	sign configurations.archives
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: sonatypeUsername, password: sonatypePassword)
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: sonatypeUsername, password: sonatypePassword)
			}

			pom.project {
				name 'Fettle'
				packaging 'jar'
				description 'Fettle is a state machine framework for java'
				url 'http://http://thehiflyer.github.com/Fettle/'

				scm {
					url 'https://github.com/thehiflyer/Fettle.git'
					connection 'https://github.com/thehiflyer/Fettle.git'
					developerConnection 'https://github.com/thehiflyer/Fettle.git'
				}

				licenses {
					license {
						name 'MIT License'
						url 'http://www.opensource.org/licenses/mit-license.php'
						distribution 'repo'
					}
				}

				developers {
					developer {
						id 'hiflyer'
						name 'Per Malm√©n'
					}
				}
			}
		}
	}

}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}